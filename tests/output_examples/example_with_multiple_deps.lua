
-- External Dependency: utils
-- Description: Utility functions
-- Source: deps/utils.lua
-- License:
-- Public Domain
-- No rights reserved.

-- Utility Library
Utils = {}

function Utils.formatTime(seconds)
    local hours = math.floor(seconds / 3600)
    local mins = math.floor((seconds % 3600) / 60)
    local secs = seconds % 60
    return string.format("%02d:%02d:%02d", hours, mins, secs)
end

function Utils.randomPoint(center, radius)
    local angle = math.random() * 2 * math.pi
    local r = math.sqrt(math.random()) * radius
    return {
        x = center.x + r * math.cos(angle),
        z = center.z + r * math.sin(angle)
    }
end

return Utils

-- External Dependency: logger
-- Description: Enhanced logging system
-- Source: deps/logger.lua

-- Enhanced Logger
Logger = {
    levels = {
        DEBUG = 1,
        INFO = 2,
        WARN = 3,
        ERROR = 4
    },
    currentLevel = 2
}

function Logger:log(level, message)
    if level >= self.currentLevel then
        local prefix = ""
        if level == self.levels.DEBUG then prefix = "[DEBUG]"
        elseif level == self.levels.WARN then prefix = "[WARN]"
        elseif level == self.levels.ERROR then prefix = "[ERROR]"
        else prefix = "[INFO]" end

        env.info(prefix .. " " .. message)
    end
end

return Logger
-- Combined and Sanitized Lua script generated on 2025-06-18T19:35:05.205018+00:00
-- THIS IS A RELEASE FILE. DO NOT EDIT THIS FILE DIRECTLY. EDIT SOURCE FILES AND REBUILD.
-- External Dependencies: 2 loaded
-- Namespace File: namespace.lua
-- Entrypoint File: main.lua
-- Core Modules Order: None
-- Scope: global

-- Namespace Content from: namespace.lua
-- Complex Mission with Multiple Dependencies
ComplexMission = {
    name = "Multi-Dependency Mission",
    version = "3.0.0"
}

-- Entrypoint Content from: main.lua
-- Mission using multiple dependencies
function ComplexMission.run()
    -- Use Logger
    Logger:log(Logger.levels.INFO, "Mission starting...")

    -- Use Utils
    local missionTime = 3661  -- 1 hour, 1 minute, 1 second
    local timeStr = Utils.formatTime(missionTime)
    Logger:log(Logger.levels.INFO, "Mission time: " .. timeStr)

    -- Generate random point
    local base = {x = 1000, z = 2000}
    local randomPos = Utils.randomPoint(base, 500)
    Logger:log(Logger.levels.DEBUG, string.format("Random position: x=%.2f, z=%.2f", randomPos.x, randomPos.z))

    -- Another random point
    local enemyBase = {x = 5000, z = 8000}
    local enemyPos = Utils.randomPoint(enemyBase, 1000)
    Logger:log(Logger.levels.INFO, string.format("Enemy spotted at: x=%.2f, z=%.2f", enemyPos.x, enemyPos.z))

    -- Calculate mission progress
    local progress = 75.5
    Logger:log(Logger.levels.WARN, "Mission " .. progress .. "% complete")

    Logger:log(Logger.levels.INFO, "Mission initialized successfully!")
end

ComplexMission.run()
